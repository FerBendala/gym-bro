from fastapi import FastAPI, HTTPException
from fastapi.middleware.cors import CORSMiddleware
from pydantic import BaseModel
import logging
import requests
import json
import re

# Configurar logging
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

app = FastAPI(title="GPT Training Assistant (Hybrid)", version="1.0.0")

# Configurar CORS para permitir conexiones desde React
app.add_middleware(
    CORSMiddleware,
    allow_origins=[
        "http://localhost:5173", 
        "http://127.0.0.1:5173",
        "http://localhost:3000",
        "http://127.0.0.1:3000",
        "*"
    ],
    allow_credentials=False,
    allow_methods=["GET", "POST", "PUT", "DELETE", "OPTIONS"],
    allow_headers=["*"],
    expose_headers=["*"]
)

# Modelo de datos
class ChatRequest(BaseModel):
    message: str
    reasoning_level: str = "medium"
    context: str = ""

class ChatResponse(BaseModel):
    response: str
    error: str = None

# Configuraci√≥n de Ollama
OLLAMA_URL = "http://localhost:11434"
MODEL_NAME = "mistral:7b"

# Respuestas r√°pidas para preguntas comunes
QUICK_RESPONSES = {
    "press banca": """Para mejorar tu press de banca:

üèãÔ∏è T√âCNICA:
‚Ä¢ Acu√©state con espalda arqueada y pies firmes
‚Ä¢ Agarra la barra ligeramente m√°s ancha que hombros
‚Ä¢ Baja controladamente hasta el pecho
‚Ä¢ Empuja hacia arriba manteniendo posici√≥n

üìà PROGRESI√ìN:
‚Ä¢ Aumenta 2.5-5kg por semana
‚Ä¢ 3 series de 8-12 repeticiones

üí™ EJERCICIOS AUXILIARES:
‚Ä¢ Press inclinado, fondos, press hombro
‚Ä¢ Flexiones, press franc√©s

üí° CONSEJOS:
‚Ä¢ Enf√≥cate en t√©cnica antes que peso
‚Ä¢ Respira correctamente (exhala al empujar)
‚Ä¢ Mant√©n core activo durante movimiento
‚Ä¢ Descansa 2-3 minutos entre series""",

    "sentadilla": """Para mejorar tus sentadillas:

üèãÔ∏è T√âCNICA:
‚Ä¢ Pies separados al ancho de hombros
‚Ä¢ Mant√©n pecho alto y espalda recta
‚Ä¢ Empuja rodillas hacia afuera
‚Ä¢ Baja hasta muslos paralelos al suelo

üìà PROGRESI√ìN:
‚Ä¢ Aumenta 5-10kg por semana
‚Ä¢ 3 series de 8-12 repeticiones

üí™ EJERCICIOS AUXILIARES:
‚Ä¢ Sentadilla frontal, b√∫lgara
‚Ä¢ Extensiones de pierna, zancadas

üí° CONSEJOS:
‚Ä¢ Mant√©n peso en los talones
‚Ä¢ No dejes rodillas doblarse hacia adentro
‚Ä¢ Respira profundamente en posici√≥n baja
‚Ä¢ Incluye variaciones para desarrollo completo""",

    "peso muerto": """Para mejorar tu peso muerto:

üèãÔ∏è T√âCNICA:
‚Ä¢ Barra cerca de las espinillas
‚Ä¢ Espalda recta y pecho alto
‚Ä¢ Empuja el suelo con los pies
‚Ä¢ Mant√©n barra cerca del cuerpo

üìà PROGRESI√ìN:
‚Ä¢ Aumenta 5-10kg por semana
‚Ä¢ 3 series de 5-8 repeticiones

üí™ EJERCICIOS AUXILIARES:
‚Ä¢ Peso muerto rumano, buenos d√≠as
‚Ä¢ Hiperextensiones, puente de gl√∫teos

üí° CONSEJOS:
‚Ä¢ Nunca redondees la espalda
‚Ä¢ Mant√©n barra cerca del cuerpo
‚Ä¢ Empuja con piernas, no tires con espalda
‚Ä¢ Calienta bien antes de cargar peso""",

    "prote√≠na": """Para nutrici√≥n √≥ptima:

ü•© PROTE√çNA:
‚Ä¢ 1.6-2.2g por kg de peso corporal
‚Ä¢ Distribuye en 4-6 comidas

üçû CARBOHIDRATOS:
‚Ä¢ 3-7g por kg de peso corporal
‚Ä¢ Principal fuente de energ√≠a

ü•ë GRASAS:
‚Ä¢ 0.8-1.2g por kg de peso corporal
‚Ä¢ Esenciales para hormonas

üíß HIDRATACI√ìN:
‚Ä¢ 2-3L de agua al d√≠a
‚Ä¢ M√°s durante entrenamiento

‚è∞ TIMING:
‚Ä¢ Come 1-2 horas antes del entrenamiento
‚Ä¢ Consume prote√≠na dentro de 30 min post-entrenamiento
‚Ä¢ Incluye carbohidratos para recuperaci√≥n""",

    "meseta": """Para superar una meseta:

üîÑ VARIACI√ìN:
‚Ä¢ Cambia rutina cada 4-6 semanas
‚Ä¢ A√±ade ejercicios nuevos
‚Ä¢ Var√≠a repeticiones y series

üìà INTENSIDAD:
‚Ä¢ Aumenta peso gradualmente
‚Ä¢ Incluye series de alta intensidad
‚Ä¢ Considera periodizaci√≥n

üí™ VOLUMEN:
‚Ä¢ Aumenta series o repeticiones
‚Ä¢ A√±ade d√≠as de entrenamiento
‚Ä¢ Incluye ejercicios auxiliares

üõå RECUPERACI√ìN:
‚Ä¢ Revisa descanso (7-9h sue√±o)
‚Ä¢ Considera deload semanal
‚Ä¢ Optimiza nutrici√≥n

üéØ MENTALIDAD:
‚Ä¢ Mant√©n diario de entrenamiento
‚Ä¢ Establece metas espec√≠ficas
‚Ä¢ Celebra peque√±os progresos""",

    "cardio": """Para cardio efectivo:

‚è∞ TIMING:
‚Ä¢ Haz cardio DESPU√âS de pesas
‚Ä¢ 20-30 minutos 3-4 veces por semana
‚Ä¢ Intensidad moderada (70-80% FC m√°x)

üî• TIPOS:
‚Ä¢ HIIT: 20-30s alta intensidad, 1-2 min descanso
‚Ä¢ LISS: 30-45 minutos ritmo constante
‚Ä¢ Circuitos: Combinar cardio y fuerza

üéØ OBJETIVOS:
‚Ä¢ P√©rdida de grasa: HIIT + LISS
‚Ä¢ Resistencia: LISS principalmente
‚Ä¢ Rendimiento: HIIT espec√≠fico

üí° CONSEJOS:
‚Ä¢ Adapta seg√∫n objetivos
‚Ä¢ No exageres (puede afectar ganancias)
‚Ä¢ Hidr√°tate bien durante cardio""",

    "descanso": """Para recuperaci√≥n √≥ptima:

üò¥ SUE√ëO:
‚Ä¢ 7-9 horas por noche
‚Ä¢ Esencial para crecimiento muscular

üõå D√çAS DE DESCANSO:
‚Ä¢ 48-72h entre grupos musculares
‚Ä¢ Permite reparaci√≥n muscular

üßò ESTR√âS:
‚Ä¢ Minimiza estr√©s mental
‚Ä¢ Incluye actividades relajantes
‚Ä¢ Considera meditaci√≥n

üíÜ MOVILIDAD:
‚Ä¢ 10-15 minutos despu√©s del entrenamiento
‚Ä¢ Mejora flexibilidad y recuperaci√≥n

üîÑ DELOAD:
‚Ä¢ Semana de descarga cada 4-6 semanas
‚Ä¢ Reduce volumen 50-70%
‚Ä¢ Mant√©n intensidad moderada

üíß HIDRATACI√ìN:
‚Ä¢ 2-3L de agua al d√≠a
‚Ä¢ M√°s durante entrenamientos intensos
‚Ä¢ Considera electrolitos""",

    "t√©cnica": """Para mejorar tu t√©cnica:

üéØ FUNDAMENTOS:
‚Ä¢ Comienza con pesos ligeros
‚Ä¢ Enf√≥cate en mente-m√∫sculo
‚Ä¢ Respira correctamente (exhala en esfuerzo)

üìπ AN√ÅLISIS:
‚Ä¢ Graba series para revisar
‚Ä¢ Compara con videos de referencia
‚Ä¢ Busca feedback de entrenadores

üß† CONCENTRACI√ìN:
‚Ä¢ Elimina distracciones
‚Ä¢ Visualiza movimiento
‚Ä¢ Mant√©n core activo

üìö EDUCACI√ìN:
‚Ä¢ Estudia biomec√°nica
‚Ä¢ Aprende de expertos
‚Ä¢ Practica movimientos sin peso

‚è∞ PROGRESI√ìN:
‚Ä¢ Domina t√©cnica antes de aumentar peso
‚Ä¢ A√±ade peso gradualmente
‚Ä¢ Revisa t√©cnica regularmente""",

    "suplementos": """Para suplementaci√≥n efectiva:

ü•õ PROTE√çNA EN POLVO:
‚Ä¢ 20-30g post-entrenamiento
‚Ä¢ Whey para recuperaci√≥n r√°pida
‚Ä¢ Case√≠na para recuperaci√≥n lenta

üíä CREATINA:
‚Ä¢ 5g diarios (monohidrato)
‚Ä¢ Mejora fuerza y potencia
‚Ä¢ No necesita carga

üß† BCAA:
‚Ä¢ Durante entrenamientos largos
‚Ä¢ Ayuda con fatiga muscular
‚Ä¢ Preserva masa muscular

ü©∏ VITAMINA D:
‚Ä¢ 2000-4000 UI diarias
‚Ä¢ Esencial para hormonas
‚Ä¢ Mejora recuperaci√≥n

üí™ PRE-ENTRENO:
‚Ä¢ Solo si es necesario
‚Ä¢ Contiene cafe√≠na y creatina
‚Ä¢ No usar todos los d√≠as

üí° CONSEJOS:
‚Ä¢ Prioriza nutrici√≥n real
‚Ä¢ Consulta con profesional
‚Ä¢ No exageres con suplementos""",

    "lesiones": """Para prevenir y tratar lesiones:

üõ°Ô∏è PREVENCI√ìN:
‚Ä¢ Calienta 10-15 minutos
‚Ä¢ Estira despu√©s del entrenamiento
‚Ä¢ Progresa gradualmente

üí™ FORTALECIMIENTO:
‚Ä¢ Trabaja m√∫sculos estabilizadores
‚Ä¢ Incluye ejercicios de equilibrio
‚Ä¢ Fortalece core y gl√∫teos

ü©π LESIONES COMUNES:
‚Ä¢ Rodilla: Fortalece cu√°driceps
‚Ä¢ Espalda: Mejora t√©cnica
‚Ä¢ Hombro: Estira y fortalece

‚è∞ RECUPERACI√ìN:
‚Ä¢ Descansa lesiones agudas
‚Ä¢ Usa hielo para inflamaci√≥n
‚Ä¢ Consulta fisioterapeuta

üí° CONSEJOS:
‚Ä¢ Escucha tu cuerpo
‚Ä¢ No ignores el dolor
‚Ä¢ Regresa gradualmente al entrenamiento""",

    "motivaci√≥n": """Para mantener la motivaci√≥n:

üéØ METAS CLARAS:
‚Ä¢ Establece objetivos espec√≠ficos
‚Ä¢ Divide en metas peque√±as
‚Ä¢ Celebra cada logro

üìä SEGUIMIENTO:
‚Ä¢ Lleva diario de entrenamiento
‚Ä¢ Toma fotos de progreso
‚Ä¢ Mide resultados regularmente

üë• COMUNIDAD:
‚Ä¢ Entrena con amigos
‚Ä¢ √önete a grupos de fitness
‚Ä¢ Comparte tus logros

üß† MENTALIDAD:
‚Ä¢ Enf√≥cate en el proceso
‚Ä¢ Acepta altibajos
‚Ä¢ Visualiza tu versi√≥n mejor

üí° CONSEJOS:
‚Ä¢ Crea rutinas consistentes
‚Ä¢ Var√≠a tus entrenamientos
‚Ä¢ Recuerda por qu√© empezaste"""
}

def check_ollama_available():
    """Verificar si Ollama est√° disponible"""
    try:
        response = requests.get(f"{OLLAMA_URL}/api/tags")
        return response.status_code == 200
    except:
        return False

def generate_response_with_ollama(prompt: str) -> str:
    """Generar respuesta usando Ollama"""
    try:
        payload = {
            "model": MODEL_NAME,
            "prompt": prompt,
            "stream": False,
            "options": {
                "temperature": 0.7,
                "top_p": 0.9,
                "num_predict": 150
            }
        }
        
        response = requests.post(f"{OLLAMA_URL}/api/generate", json=payload)
        
        if response.status_code == 200:
            result = response.json()
            return result.get("response", "No se pudo generar una respuesta")
        else:
            logger.error(f"Error en Ollama: {response.status_code} - {response.text}")
            return "Error al generar respuesta"
            
    except Exception as e:
        logger.error(f"Error comunic√°ndose con Ollama: {e}")
        return f"Error de conexi√≥n: {str(e)}"

def get_quick_response(message: str) -> str:
    """Obtener respuesta r√°pida para preguntas comunes"""
    message_lower = message.lower()
    
    # Palabras clave para cada categor√≠a
    keywords = {
        "press banca": ["press", "banca", "pecho", "bench"],
        "sentadilla": ["sentadilla", "squat", "pierna", "leg"],
        "peso muerto": ["peso muerto", "deadlift", "muerto"],
        "prote√≠na": ["prote√≠na", "proteina", "nutrici√≥n", "nutricion", "comida", "alimentaci√≥n"],
        "meseta": ["meseta", "estancado", "progreso", "avance"],
        "cardio": ["cardio", "aer√≥bico", "aerobico", "correr", "bicicleta"],
        "descanso": ["descanso", "recuperaci√≥n", "recuperacion", "dormir", "sue√±o"],
        "t√©cnica": ["t√©cnica", "tecnica", "forma", "ejecuci√≥n", "ejecucion"],
        "suplementos": ["suplementos", "suplemento", "prote√≠na en polvo", "creatina", "bcaa", "vitamina"],
        "lesiones": ["lesi√≥n", "lesion", "dolor", "injury", "rehabilitaci√≥n", "rehabilitacion"],
        "motivaci√≥n": ["motivaci√≥n", "motivacion", "motivado", "motivada", "√°nimo", "animo", "inspiraci√≥n"]
    }
    
    for category, keyword_list in keywords.items():
        for keyword in keyword_list:
            if keyword in message_lower:
                return QUICK_RESPONSES[category]
    
    return None

@app.get("/")
async def root():
    return {"message": "GPT Training Assistant API (Hybrid)", "status": "running"}

@app.get("/health")
async def health_check():
    ollama_available = check_ollama_available()
    return {
        "status": "healthy" if ollama_available else "unhealthy",
        "model_loaded": ollama_available,
        "mode": "hybrid",
        "model": MODEL_NAME
    }

@app.post("/chat", response_model=ChatResponse)
async def chat(request: ChatRequest):
    """Endpoint principal para chat con el modelo"""
    try:
        logger.info(f"Procesando mensaje: {request.message}")
        
        # Intentar obtener respuesta r√°pida
        quick_response = get_quick_response(request.message)
        
        if quick_response:
            logger.info("Usando respuesta r√°pida")
            return ChatResponse(response=quick_response)
        
        # Si no hay respuesta r√°pida, usar el modelo
        logger.info("Usando modelo IA")
        
        # Construir prompt con contexto de entrenamiento
        if request.context:
            enhanced_prompt = f"""
Contexto de entrenamiento: {request.context}

Pregunta: {request.message}

Como experto en fitness, responde brevemente:
"""
        else:
            enhanced_prompt = f"""
Como experto en fitness y entrenamiento, responde SOLO EN ESPA√ëOL de manera breve y pr√°ctica: {request.message}

Da 3-5 consejos espec√≠ficos y √∫tiles. Responde √∫nicamente en espa√±ol.
"""

        # Generar respuesta usando Ollama
        response = generate_response_with_ollama(enhanced_prompt)
        
        return ChatResponse(response=response)
        
    except Exception as e:
        logger.error(f"Error procesando mensaje: {e}")
        return ChatResponse(response="", error=str(e))

@app.post("/analyze-training", response_model=ChatResponse)
async def analyze_training_data(request: ChatRequest):
    """Endpoint espec√≠fico para an√°lisis de datos de entrenamiento"""
    try:
        analysis_prompt = f"""
Analiza estos datos de entrenamiento y proporciona insights √∫tiles EN ESPA√ëOL:

{request.message}

Como experto en entrenamiento f√≠sico, proporciona EN ESPA√ëOL:
1. An√°lisis detallado del progreso
2. Identificaci√≥n de patrones y tendencias
3. Recomendaciones espec√≠ficas para mejorar
4. Posibles ajustes en la rutina
5. Consejos para optimizar el rendimiento

S√© espec√≠fico y proporciona consejos pr√°cticos. Responde √∫nicamente en espa√±ol.
"""

        logger.info(f"Analizando datos de entrenamiento")
        
        # Generar an√°lisis usando Ollama
        response = generate_response_with_ollama(analysis_prompt)
        
        return ChatResponse(response=response)
        
    except Exception as e:
        logger.error(f"Error analizando datos: {e}")
        return ChatResponse(response="", error=str(e))

if __name__ == "__main__":
    import uvicorn
    print("üöÄ Iniciando servidor h√≠brido en http://localhost:8001")
    print(f"üß† Usando modelo: {MODEL_NAME}")
    print("‚ö° Respuestas r√°pidas para preguntas comunes")
    print("ü§ñ Modelo IA para preguntas complejas")
    uvicorn.run(app, host="0.0.0.0", port=8003, reload=False) 